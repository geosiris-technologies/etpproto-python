
[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[project]
dynamic = ["version", "dependencies"]
name = "etpproto"
description = "ETP protocol implementation"
authors = [
    {name = "Lionel Untereiner", email = "lionel.untereiner@geosiris.com"} ,
    {name = "Valentin Gauthier", email = "valentin.gauthier@geosiris.com"}
]
maintainers = [
    {name = "Valentin Gauthier", email = "valentin.gauthier@geosiris.com"}
]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/geosiris-technologies/etpproto-python"
homepage = "http://www.geosiris.com"
keywords = ["ETP"]
requires-python = ">=3.9, <4.0"


[tool.poetry]
version = "0.0.0"

[tool.poetry.dependencies]
fastavro = "^1.6.1"
etptypes = "^1.0.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
coverage = {extras = ["toml"], version = "7.6.10"}
flake8 = "^7.1.0"
black = "^24.10.0"
pytest-cov = "^6.0.0"
pre-commit = "^2.11.1"
pylint = "^3.3.3"
pytest-asyncio = "^0.25.2"
mypy = "^1.14.0"
click = ">=8.1.3, <=8.1.3" # upper version than 8.0.2 fail with black
isort = "^5.10.1"
poetry-dynamic-versioning = "^1.8.1"
jinja2 = "^3.1.6"


[tool.black]
line-length = 79
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | htmlcov
)/
'''

[tool.pytest.ini_options]
addopts = ""
console_output_style = "count"
python_classes = "Test"
python_files = "test_*.py"
python_functions = "test*"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["etpproto"]

[tool.pylint.format]
max-line-length = "88"


[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance) }}
    {%- endif -%}
"""
